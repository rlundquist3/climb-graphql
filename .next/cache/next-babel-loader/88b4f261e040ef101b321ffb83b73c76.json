{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rlundquist3/climb-graphql/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    route {\\n      name\\n      grade\\n      area {\\n        name\\n        parent_area {\\n          name\\n        }\\n      }\\n      location\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withData from \"../config\";\nimport RouteList from \"./route-list\";\nvar query = gql(_templateObject());\n\nvar Index = function Index(_ref) {\n  var authors = _ref.authors;\n\n  var _useQuery = useQuery(query, {\n    fetchPolicy: \"cache-and-network\"\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, error && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Error..\"), __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Routes\"), loading && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Loading...\"), __jsx(RouteList, {\n    routes: data ? data.route : [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nexport default withData(Index);","map":{"version":3,"sources":["/home/rlundquist3/climb-graphql/pages/index.js"],"names":["gql","Query","useQuery","withData","RouteList","query","Index","authors","fetchPolicy","data","loading","error","route"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,IAAMC,KAAK,GAAGL,GAAH,mBAAX;;AAgBA,IAAMM,KAAK,GAAG,SAARA,KAAQ,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACIL,QAAQ,CAACG,KAAD,EAAQ;AAC/CG,IAAAA,WAAW,EAAE;AADkC,GAAR,CADZ;AAAA,MACrBC,IADqB,aACrBA,IADqB;AAAA,MACfC,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM;;AAK7B,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,EAGI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFd,EAGE,MAAC,SAAD;AAAW,IAAA,MAAM,EAAED,IAAI,GAAGA,IAAI,CAACG,KAAR,GAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHJ,CADF;AAYD,CAjBD;;AAmBA,eAAeT,QAAQ,CAACG,KAAD,CAAvB","sourcesContent":["import gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withData from \"../config\";\n\nimport RouteList from \"./route-list\";\n\nconst query = gql`\n  query {\n    route {\n      name\n      grade\n      area {\n        name\n        parent_area {\n          name\n        }\n      }\n      location\n    }\n  }\n`;\n\nconst Index = ({ authors }) => {\n  const { data, loading, error } = useQuery(query, {\n    fetchPolicy: \"cache-and-network\"\n  });\n\n  return (\n    <React.Fragment>\n      {error && <div>Error..</div>}\n      {\n        <React.Fragment>\n          <h1>Routes</h1>\n          {loading && <div>Loading...</div>}\n          <RouteList routes={data ? data.route : []} />\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default withData(Index);\n"]},"metadata":{},"sourceType":"module"}