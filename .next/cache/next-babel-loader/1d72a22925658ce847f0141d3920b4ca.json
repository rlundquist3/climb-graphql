{"ast":null,"code":"var _jsxFileName = \"/home/rlundquist3/climb-graphql/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withData from \"../config\";\nimport RouteList from \"./route-list\";\nconst query = gql`\n  query {\n    route {\n      name\n      grade\n      area {\n        name\n        parent_area {\n          name\n        }\n      }\n      location\n    }\n  }\n`;\n\nconst Index = ({\n  authors\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query, {\n    fetchPolicy: \"cache-and-network\"\n  });\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, error && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Error..\"), __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Routes\"), loading && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Loading...\"), __jsx(RouteList, {\n    routes: data ? data.route : [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nexport default withData(Index);","map":{"version":3,"sources":["/home/rlundquist3/climb-graphql/pages/index.js"],"names":["gql","Query","useQuery","withData","RouteList","query","Index","authors","data","loading","error","fetchPolicy","route"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,KAAK,GAAGL,GAAI;;;;;;;;;;;;;;CAAlB;;AAgBA,MAAMM,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACG,KAAD,EAAQ;AAC/CM,IAAAA,WAAW,EAAE;AADkC,GAAR,CAAzC;AAIA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,EAGI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFd,EAGE,MAAC,SAAD;AAAW,IAAA,MAAM,EAAED,IAAI,GAAGA,IAAI,CAACI,KAAR,GAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHJ,CADF;AAYD,CAjBD;;AAmBA,eAAeT,QAAQ,CAACG,KAAD,CAAvB","sourcesContent":["import gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withData from \"../config\";\n\nimport RouteList from \"./route-list\";\n\nconst query = gql`\n  query {\n    route {\n      name\n      grade\n      area {\n        name\n        parent_area {\n          name\n        }\n      }\n      location\n    }\n  }\n`;\n\nconst Index = ({ authors }) => {\n  const { data, loading, error } = useQuery(query, {\n    fetchPolicy: \"cache-and-network\"\n  });\n\n  return (\n    <React.Fragment>\n      {error && <div>Error..</div>}\n      {\n        <React.Fragment>\n          <h1>Routes</h1>\n          {loading && <div>Loading...</div>}\n          <RouteList routes={data ? data.route : []} />\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default withData(Index);\n"]},"metadata":{},"sourceType":"module"}