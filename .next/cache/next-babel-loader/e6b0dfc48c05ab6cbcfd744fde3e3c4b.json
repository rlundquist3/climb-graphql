{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rlundquist3/climb-graphql/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    route {\\n      name\\n      grade\\n      area {\\n        name\\n        parent_area {\\n          name\\n        }\\n      }\\n      location\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport withData from \"../config\";\nimport RouteList from \"./route-list\";\nvar query = gql(_templateObject());\n\nvar Index = function Index(_ref) {\n  var authors = _ref.authors;\n  return __jsx(Query // <- Wrapping the main component with Query component from react-apollo\n  , {\n    query: query,\n    fetchPolicy: \"cache-and-network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        data = _ref2.data,\n        error = _ref2.error;\n\n    if (error) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Error..\");\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Routes\"), __jsx(RouteList, {\n      routes: data ? data.route : [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default withData(Index);","map":{"version":3,"sources":["/home/rlundquist3/climb-graphql/pages/index.js"],"names":["gql","Query","withData","RouteList","query","Index","authors","loading","data","error","route"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,IAAMC,KAAK,GAAGJ,GAAH,mBAAX;;AAgBA,IAAMK,KAAK,GAAG,SAARA,KAAQ,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7B,SACE,MAAC,KAAD,CAAO;AAAP;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,WAAW,EAAE,mBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,iBAA8B;AAAA,QAA3BG,OAA2B,SAA3BA,OAA2B;AAAA,QAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,QAAZC,KAAY,SAAZA,KAAY;;AAC7B,QAAIA,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,SAAD;AAAW,MAAA,MAAM,EAAED,IAAI,GAAGA,IAAI,CAACE,KAAR,GAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAdH,CADF;AAkBD,CAnBD;;AAqBA,eAAeR,QAAQ,CAACG,KAAD,CAAvB","sourcesContent":["import gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport withData from \"../config\";\n\nimport RouteList from \"./route-list\";\n\nconst query = gql`\n  query {\n    route {\n      name\n      grade\n      area {\n        name\n        parent_area {\n          name\n        }\n      }\n      location\n    }\n  }\n`;\n\nconst Index = ({ authors }) => {\n  return (\n    <Query // <- Wrapping the main component with Query component from react-apollo\n      query={query}\n      fetchPolicy={\"cache-and-network\"}\n    >\n      {({ loading, data, error }) => {\n        if (error) {\n          return <div>Error..</div>;\n        }\n        return (\n          <div>\n            <h1>Routes</h1>\n            <RouteList routes={data ? data.route : []} />\n          </div>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default withData(Index);\n"]},"metadata":{},"sourceType":"module"}